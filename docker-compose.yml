version: '3.4'

services:
  php:
    image: ${CONTAINER_REGISTRY_BASE}/php
    build:
      context: ./
      dockerfile: ./Dockerfile
      target: api_platform_php
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
    depends_on:
      - db
    env_file:
      - ./.env.dist
    # Comment out these volumes in production
    volumes:
      - ./:/srv/api:rw
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
#      - ./var:/srv/var:rw

  api:
    image: ${CONTAINER_REGISTRY_BASE}/nginx
    build:
      context: ./
      dockerfile: ./Dockerfile
      target: api_platform_nginx
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
    depends_on:
      - php
    # Comment out this volume in production
    volumes:
      - ./public:/srv/api/public:ro
    ports:
      - "8080:80"

  db:
    # In production, you may want to use a managed database service
    image: mysql:5.7
    volumes:
      - ./.data/db:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

volumes:
  db-data: {}
